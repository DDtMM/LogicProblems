<svg *ngIf="gridVm"
  [attr.viewBox]="getViewbox()">

  <ng-container *ngFor="let cat of gridVm!.xCats">
    <g class="grid-cell" [attr.transform]="getTranslate(1 + itemLabelMultiplier + cat.itemOffset, 0)">
      <rect [attr.width]="cat.items.length * baseUnit" [attr.height]="baseUnit" />
      <text [attr.x]="baseUnit * cat.items.length / 2"
        [attr.y]="baseUnit * .5" alignment-baseline="central"
        text-anchor="middle">{{cat.label}}</text>
    </g>
    <g class="grid-cell" *ngFor="let item of cat.items; let index = index"
      [attr.transform]="getTranslate(1 + itemLabelMultiplier + cat.itemOffset + index, 1)">
      <rect [attr.width]="baseUnit" [attr.height]="itemLabelMultiplier * baseUnit" />
      <text [attr.x]="baseUnit * .1"
        [attr.y]="baseUnit * .5" alignment-baseline="central"
        [attr.transform]="getHorizLabelTransform(itemLabelMultiplier)">{{item.label}}</text>
    </g>
  </ng-container>
  <ng-container *ngFor="let cat of gridVm!.yCats">
    <g class="grid-cell" [attr.transform]=" getTranslate(0, 1 + itemLabelMultiplier + cat.itemOffset)">
      <rect [attr.width]="baseUnit" [attr.height]="cat.items.length * baseUnit" />
      <text [attr.x]="baseUnit * cat.items.length / 2" text-anchor="middle"
        [attr.y]="baseUnit * .5" alignment-baseline="central"
        [attr.transform]="getHorizLabelTransform(cat.items.length)" >{{cat.label}}</text>
    </g>
    <g class="grid-cell" *ngFor="let item of cat.items; let index = index"
      [attr.transform]="getTranslate(1, 1 + itemLabelMultiplier + cat.itemOffset + index)">
      <rect [attr.width]="itemLabelMultiplier * baseUnit" [attr.height]="baseUnit" />
      <text [attr.x]="baseUnit * itemLabelMultiplier - baseUnit * .1" text-anchor="end"
        [attr.y]="baseUnit * .5" alignment-baseline="central">{{item.label}}</text>
    </g>
  </ng-container>
  <ng-container *ngFor="let matricesRow of gridVm!.matrices">
    <ng-container *ngFor="let catMatrix of matricesRow">
      <ng-container *ngFor="let matrixRow of catMatrix.elems; let yIndex = index">
        <g class="grid-cell" *ngFor="let mElem of matrixRow; let xIndex = index"
        (click)="toggleState(mElem)"
          [attr.transform]="getTranslate(
            (1 + itemLabelMultiplier + catMatrix.catX.itemOffset + xIndex),
            (1 + itemLabelMultiplier + catMatrix.catY.itemOffset + yIndex))">

          <rect [attr.width]="baseUnit" [attr.height]="baseUnit" />
          <g stroke="red" *ngIf="mElem.state === 'reject'">
            <line x1="1" y1="1" [attr.x2]="baseUnit - 1" [attr.y2]="baseUnit - 1" />
            <line x1="1" [attr.y1]="baseUnit - 1" [attr.x2]="baseUnit - 1" y2="1" />
          </g>
          <g fill="lightgreen" *ngIf="mElem.state === 'accept'">
            <circle [attr.cx]="baseUnit / 2" [attr.cy]="baseUnit / 2" [attr.r]="baseUnit / 3"  />
          </g>
        </g>
      </ng-container>
    </ng-container>
  </ng-container>
</svg>
