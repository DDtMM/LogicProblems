<svg *ngIf="gridVm" [attr.viewBox]="getViewbox()">
  <defs>
    <g id="acceptIcon" fill="lightgreen">
      <circle [attr.cx]="baseUnit / 2" [attr.cy]="baseUnit / 2" [attr.r]="baseUnit / 3" />
    </g>
    <g id="rejectIcon" stroke="red">
      <line x1="2" y1="2" [attr.x2]="baseUnit - 2" [attr.y2]="baseUnit - 2" />
      <line x1="2" [attr.y1]="baseUnit - 2" [attr.x2]="baseUnit - 2" y2="2" />
    </g>
  </defs>
  <g transform="translate(.5, .5)">
    <ng-container *ngFor="let cat of gridVm!.xCats">
      <g class="grid-cell" [attr.transform]="getTransformTranslate(1 + itemLabelMultiplier + cat.itemOffset, 0)">
        <rect [attr.fill]="getCatColor(cat)" [attr.width]="cat.items.length * baseUnit" [attr.height]="baseUnit" />
        <text appProblemGridLabel textAlign="center" [length]="cat.items.length">{{cat.label}}</text>
      </g>
      <g class="grid-cell" *ngFor="let item of cat.items; let index = index" [attr.transform]="getTransformTranslate(1 + itemLabelMultiplier + cat.itemOffset + index, 1)">
        <rect [attr.fill]="getCatColor(cat)" [attr.width]="baseUnit" [attr.height]="itemLabelMultiplier * baseUnit" />
        <text appProblemGridLabel orientation="vert">{{item.label}}</text>
      </g>
    </ng-container>
    <ng-container *ngFor="let cat of gridVm!.yCats">
      <g class="grid-cell" [attr.transform]=" getTransformTranslate(0, 1 + itemLabelMultiplier + cat.itemOffset)">
        <rect [attr.fill]="getCatColor(undefined, cat)" [attr.width]="baseUnit" [attr.height]="cat.items.length * baseUnit" />
        <text appProblemGridLabel textAlign="center" orientation="vert" [length]="cat.items.length">{{cat.label}}</text>
      </g>
      <g class="grid-cell" *ngFor="let item of cat.items; let index = index" [attr.transform]="getTransformTranslate(1, 1 + itemLabelMultiplier + cat.itemOffset + index)">
        <rect  [attr.fill]="getCatColor(undefined, cat)" [attr.width]="itemLabelMultiplier * baseUnit" [attr.height]="baseUnit" />
        <text appProblemGridLabel textAlign="right">{{item.label}}</text>
      </g>
    </ng-container>
    <ng-container *ngFor="let matricesRow of gridVm!.matrices">
      <ng-container *ngFor="let catMatrix of matricesRow">
        <ng-container *ngFor="let matrixRow of catMatrix.elems; let yIndex = index">
          <g class="grid-cell" *ngFor="let mElem of matrixRow; let xIndex = index" (click)="toggleState(mElem)" [attr.transform]="getTransformTranslate(
            (1 + itemLabelMultiplier + catMatrix.catX.itemOffset + xIndex),
            (1 + itemLabelMultiplier + catMatrix.catY.itemOffset + yIndex))">

            <rect [attr.fill]="getCatColor(catMatrix.catX, catMatrix.catY)"
              [attr.width]="baseUnit" [attr.height]="baseUnit" />
            <use href="#rejectIcon" *ngIf="mElem.state === 'reject'" />
            <use href="#acceptIcon" *ngIf="mElem.state === 'accept'" />
          </g>
        </ng-container>
      </ng-container>
    </ng-container>
  </g>
</svg>
